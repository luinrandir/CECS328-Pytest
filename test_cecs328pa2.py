# Tests for PA2 - Non-Return to Zero
# Alex Gonzalez

import pytest

from cecs328pa2 import *


@pytest.mark.parametrize(
    "test_input, expected_result",
    [
        (
            """
___     ___
   |   |   |
   |   |   |
   |___|   |______
""",
            "10100",
        ),
        (
            """
    ___     ______
   |   |   |
   |   |   |
___|   |___|
""",
            "01011",
        ),
        (
            """
______     ___
      |   |   |
      |   |   |
      |___|   |___
""",
            "11010",
        ),
        (
            """
       ___     ___
      |   |   |
      |   |   |
______|   |___|
""",
            "00101",
        ),
        (
            """
    ______
   |      |
   |      |
___|      |___
""",
            "0110",
        ),
        (
            """
___        ___
   |      |
   |      |
   |______|
""",
            "1001",
        ),
        (
            """
______        ___
      |      |
      |      |
      |______|
""",
            "11001",
        ),
        (
            """
       ______
      |      |
      |      |
______|      |___
""",
            "00110",
        ),
        (
            """
______        ______
      |      |
      |      |
      |______|
""",
            "110011",
        ),
        (
            """
       ______
      |      |
      |      |
______|      |______
""",
            "001100",
        ),
        (
            """
____________



""",
            "1111",
        ),
        (
            """



____________
""",
            "0000",
        ),
        (
            """
___     ___     ___
   |   |   |   |
   |   |   |   |
   |___|   |___|
""",
            "10101",
        ),
        (
            """
    ___     ___
   |   |   |   |
   |   |   |   |
___|   |___|   |___
""",
            "01010",
        ),
        (
            """
___     ___     ___     ___     ___
   |   |   |   |   |   |   |   |
   |   |   |   |   |   |   |   |
   |___|   |___|   |___|   |___|
""",
            "101010101",
        ),
        (
            """
    ___     ___     ___     ___
   |   |   |   |   |   |   |   |
   |   |   |   |   |   |   |   |
___|   |___|   |___|   |___|   |___
""",
            "010101010",
        ),
        (
            """
___
   |
   |
   |___
""",
            "10",
        ),
        (
            """
    ___
   |
   |
___|
""",
            "01",
        ),
        (
            """
___
   |
   |
   |______
""",
            "100",
        ),
        (
            """
    ______
   |
   |
___|
""",
            "011",
        ),
        (
            """
___     ___     ______        _________          
   |   |   |   |      |      |         |
   |   |   |   |      |      |         |
   |___|   |___|      |______|         |_________
""",
            "10101100111000",
        ),
        ("", ""),
    ],
)
def test_nrz_encoding(test_input, expected_result):
    assert nrz_encoding(test_input) == expected_result
